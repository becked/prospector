-- DuckDB Schema Export
-- Generated by scripts/export_schema.py
-- DO NOT EDIT MANUALLY - This file is auto-generated

-- Table: cities
CREATE TABLE cities (
    city_id INTEGER NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    city_name VARCHAR NOT NULL,
    tile_id INTEGER NOT NULL,
    founded_turn INTEGER NOT NULL,
    family_name VARCHAR,
    is_capital BOOLEAN DEFAULT CAST('f' AS BOOLEAN),
    population INTEGER,
    first_player_id BIGINT,
    governor_id INTEGER
);

-- Table: city_projects
CREATE TABLE city_projects (
    project_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    city_id INTEGER NOT NULL,
    project_type VARCHAR NOT NULL,
    count INTEGER NOT NULL
);

-- Table: city_unit_production
CREATE TABLE city_unit_production (
    production_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    city_id INTEGER NOT NULL,
    unit_type VARCHAR NOT NULL,
    count INTEGER NOT NULL
);

-- Table: events
CREATE TABLE events (
    event_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    turn_number INTEGER NOT NULL,
    event_type VARCHAR NOT NULL,
    player_id BIGINT,
    description VARCHAR,
    x_coordinate INTEGER,
    y_coordinate INTEGER,
    event_data JSON
);

-- Table: family_opinion_history
CREATE TABLE family_opinion_history (
    family_opinion_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    turn_number INTEGER NOT NULL,
    family_name VARCHAR NOT NULL,
    opinion INTEGER NOT NULL
);

-- Table: match_metadata
CREATE TABLE match_metadata (
    match_id BIGINT NOT NULL,
    difficulty VARCHAR,
    event_level VARCHAR,
    victory_type VARCHAR,
    victory_turn INTEGER,
    opponent_level VARCHAR,
    tribe_level VARCHAR,
    development VARCHAR,
    advantage VARCHAR,
    succession_gender VARCHAR,
    succession_order VARCHAR,
    mortality VARCHAR,
    victory_point_modifier VARCHAR,
    game_options VARCHAR,
    dlc_content VARCHAR,
    map_settings VARCHAR
);

-- Table: match_summary
CREATE TABLE match_summary (
    match_id BIGINT,
    game_name VARCHAR,
    save_date TIMESTAMP,
    total_turns INTEGER,
    map_size VARCHAR,
    victory_conditions VARCHAR,
    player_count BIGINT,
    winner_name VARCHAR,
    winner_civilization VARCHAR
);

-- Table: match_winners
CREATE TABLE match_winners (
    match_id BIGINT NOT NULL,
    winner_player_id BIGINT NOT NULL,
    winner_determination_method VARCHAR DEFAULT 'automatic',
    determined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table: matches
CREATE TABLE matches (
    match_id BIGINT NOT NULL,
    challonge_match_id INTEGER,
    file_name VARCHAR NOT NULL,
    file_hash VARCHAR NOT NULL,
    game_name VARCHAR,
    save_date TIMESTAMP,
    processed_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    game_mode VARCHAR,
    map_size VARCHAR,
    map_class VARCHAR,
    map_aspect_ratio VARCHAR,
    turn_style VARCHAR,
    turn_timer VARCHAR,
    victory_conditions VARCHAR,
    total_turns INTEGER,
    winner_player_id BIGINT,
    player1_participant_id BIGINT,
    player2_participant_id BIGINT,
    winner_participant_id BIGINT,
    first_picker_participant_id BIGINT,
    second_picker_participant_id BIGINT,
    narrative_summary VARCHAR
);

-- Table: participant_name_overrides
CREATE TABLE participant_name_overrides (
    override_id INTEGER NOT NULL,
    match_id BIGINT NOT NULL,
    save_file_player_name VARCHAR NOT NULL,
    participant_id BIGINT NOT NULL,
    reason VARCHAR,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table: pick_order_games
CREATE TABLE pick_order_games (
    game_number INTEGER NOT NULL,
    round_number INTEGER NOT NULL,
    round_label VARCHAR,
    player1_sheet_name VARCHAR NOT NULL,
    player2_sheet_name VARCHAR NOT NULL,
    first_pick_nation VARCHAR NOT NULL,
    second_pick_nation VARCHAR NOT NULL,
    first_picker_sheet_name VARCHAR,
    second_picker_sheet_name VARCHAR,
    matched_match_id BIGINT,
    first_picker_participant_id BIGINT,
    second_picker_participant_id BIGINT,
    match_confidence VARCHAR,
    match_reason VARCHAR,
    fetched_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    matched_at TIMESTAMP
);

-- Table: player_legitimacy_history
CREATE TABLE player_legitimacy_history (
    legitimacy_history_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    turn_number INTEGER NOT NULL,
    legitimacy INTEGER NOT NULL
);

-- Table: player_military_history
CREATE TABLE player_military_history (
    military_history_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    turn_number INTEGER NOT NULL,
    military_power INTEGER NOT NULL
);

-- Table: player_performance
CREATE TABLE player_performance (
    player_id BIGINT,
    player_name VARCHAR,
    civilization VARCHAR,
    total_matches BIGINT,
    wins BIGINT,
    win_rate DOUBLE,
    avg_score DOUBLE
);

-- Table: player_points_history
CREATE TABLE player_points_history (
    points_history_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    turn_number INTEGER NOT NULL,
    points INTEGER NOT NULL
);

-- Table: player_statistics
CREATE TABLE player_statistics (
    stat_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    stat_category VARCHAR NOT NULL,
    stat_name VARCHAR NOT NULL,
    value INTEGER NOT NULL
);

-- Table: player_yield_history
CREATE TABLE player_yield_history (
    resource_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    turn_number INTEGER NOT NULL,
    resource_type VARCHAR NOT NULL,
    amount INTEGER NOT NULL
);

-- Table: players
CREATE TABLE players (
    player_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_name VARCHAR NOT NULL,
    player_name_normalized VARCHAR NOT NULL,
    civilization VARCHAR,
    team_id INTEGER,
    difficulty_level VARCHAR,
    final_score INTEGER DEFAULT 0,
    is_human BOOLEAN DEFAULT CAST('t' AS BOOLEAN),
    final_turn_active INTEGER,
    participant_id BIGINT
);

-- Table: religion_opinion_history
CREATE TABLE religion_opinion_history (
    religion_opinion_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    turn_number INTEGER NOT NULL,
    religion_name VARCHAR NOT NULL,
    opinion INTEGER NOT NULL
);

-- Table: rulers
CREATE TABLE rulers (
    ruler_id INTEGER NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    character_id INTEGER NOT NULL,
    ruler_name VARCHAR,
    archetype VARCHAR,
    starting_trait VARCHAR,
    succession_order INTEGER NOT NULL,
    succession_turn INTEGER NOT NULL
);

-- Table: schema_migrations
CREATE TABLE schema_migrations (
    version VARCHAR NOT NULL,
    applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    description VARCHAR
);

-- Table: technology_progress
CREATE TABLE technology_progress (
    tech_progress_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    tech_name VARCHAR NOT NULL,
    count INTEGER NOT NULL
);

-- Table: territories
CREATE TABLE territories (
    territory_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    x_coordinate INTEGER NOT NULL,
    y_coordinate INTEGER NOT NULL,
    turn_number INTEGER NOT NULL,
    terrain_type VARCHAR,
    owner_player_id BIGINT
);

-- Table: tournament_participants
CREATE TABLE tournament_participants (
    participant_id BIGINT NOT NULL,
    display_name VARCHAR NOT NULL,
    display_name_normalized VARCHAR NOT NULL,
    challonge_username VARCHAR,
    challonge_user_id BIGINT,
    seed INTEGER,
    final_rank INTEGER,
    created_at TIMESTAMP,
    updated_at TIMESTAMP
);

-- Table: unit_classifications
CREATE TABLE unit_classifications (
    unit_type VARCHAR NOT NULL,
    category VARCHAR NOT NULL,
    role VARCHAR NOT NULL,
    description VARCHAR
);

-- Table: units_produced
CREATE TABLE units_produced (
    unit_produced_id BIGINT NOT NULL,
    match_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    unit_type VARCHAR NOT NULL,
    count INTEGER NOT NULL
);

